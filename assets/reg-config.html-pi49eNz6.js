import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o,c as p,b as n,d as i,a as c,e as s}from"./app-mUJcyCku.js";const l={},r=s(`<h1 id="注册表配置" tabindex="-1"><a class="header-anchor" href="#注册表配置" aria-hidden="true">#</a> 注册表配置</h1><h2 id="获取环境变量" tabindex="-1"><a class="header-anchor" href="#获取环境变量" aria-hidden="true">#</a> 获取环境变量</h2><div class="language-bat line-numbers-mode" data-ext="bat"><pre class="language-bat"><code>REM 读取用户环境配置
reg query &quot;HKCU\\Environment&quot;
RMG 读取系统环境变量
reg query &quot;HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment&quot; /v Path
REM 读取运行环境变量
set Path
echo %Path%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="powershell" tabindex="-1"><a class="header-anchor" href="#powershell" aria-hidden="true">#</a> PowerShell</h3>`,4),u={href:"https://blog.51cto.com/sysin/9056763",target:"_blank",rel:"noopener noreferrer"},d=s(`<div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token comment"># 使用 reg query</span>
<span class="token comment"># (reg query &#39;HKCU\\Environment&#39; /v Path) -split &quot;\`n&quot; | ForEach-Object { if ($_ -match &#39;\\s*Path\\s*REG_EXPAND_SZ\\s*(.+)&#39;) { $Matches[1]; break }}</span>
<span class="token punctuation">(</span>reg query <span class="token string">&#39;HKCU\\Environment&#39;</span> <span class="token operator">/</span>v Path<span class="token punctuation">)</span> <span class="token operator">-</span>split <span class="token string">&quot;\`n&quot;</span> <span class="token punctuation">|</span> <span class="token function">Where-Object</span> <span class="token punctuation">{</span> <span class="token variable">$_</span> <span class="token operator">-match</span> <span class="token string">&#39;\\s*Path\\s*REG_EXPAND_SZ\\s*(.+)&#39;</span><span class="token punctuation">}</span> <span class="token punctuation">|</span> <span class="token function">ForEach-Object</span> <span class="token punctuation">{</span> <span class="token variable">$Matches</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token namespace">[environment]</span>::SetEnvironmentvariable<span class="token punctuation">(</span><span class="token string">&quot;CLASSPATH&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">-not</span> <span class="token variable">$env</span>:_OldUPath<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token variable">$env</span>:_OldUPath = <span class="token punctuation">(</span>reg query <span class="token string">&#39;HKCU\\Environment&#39;</span> <span class="token operator">/</span>v Path<span class="token punctuation">)</span> <span class="token operator">-</span>split <span class="token string">&quot;\`n&quot;</span> <span class="token punctuation">|</span> <span class="token function">Where-Object</span> <span class="token punctuation">{</span> <span class="token variable">$_</span> <span class="token operator">-match</span> <span class="token string">&#39;\\s*Path\\s*REG_EXPAND_SZ\\s*(.+)&#39;</span><span class="token punctuation">}</span> <span class="token punctuation">|</span> <span class="token function">ForEach-Object</span> <span class="token punctuation">{</span> <span class="token variable">$Matches</span><span class="token punctuation">[</span>1<span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token comment"># 所有环境变量</span>
<span class="token function">ls</span> env:
<span class="token comment"># 使用 Get-ItemPropertyValue 获取注册表中 Path 环境变量的值</span>
<span class="token function">Get-ItemPropertyValue</span> <span class="token operator">-</span>Path <span class="token string">&#39;HKCU:\\Environment&#39;</span> <span class="token operator">-</span>Name <span class="token string">&#39;Path&#39;</span>
<span class="token comment"># 用户环境变量</span>
<span class="token namespace">[environment]</span>::GetEnvironmentvariable<span class="token punctuation">(</span><span class="token string">&quot;Path&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 系统环境变量</span>
<span class="token namespace">[environment]</span>::GetEnvironmentvariable<span class="token punctuation">(</span><span class="token string">&quot;Path&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Machine&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 设置用户变量</span>
<span class="token namespace">[environment]</span>::SetEnvironmentvariable<span class="token punctuation">(</span><span class="token string">&quot;VAR_NAME&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">)</span>
<span class="token namespace">[System.Environment]</span>::SetEnvironmentVariable<span class="token punctuation">(</span><span class="token string">&quot;VAR_NAME&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token namespace">[System.EnvironmentVariableTarget]</span>::User<span class="token punctuation">)</span>
<span class="token comment"># 设置系统变量</span>
<span class="token namespace">[environment]</span>::SetEnvironmentvariable<span class="token punctuation">(</span><span class="token string">&quot;VAR_NAME&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Machine&quot;</span><span class="token punctuation">)</span>
<span class="token namespace">[System.Environment]</span>::SetEnvironmentVariable<span class="token punctuation">(</span><span class="token string">&quot;VAR_NAME&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token namespace">[System.EnvironmentVariableTarget]</span>::Machine<span class="token punctuation">)</span>
<span class="token comment"># 创建新的注册表项</span>
<span class="token comment"># New-Item -Path &#39;HKCU:\\Software\\NewKey&#39;</span>
<span class="token comment"># 设置注册表项的值</span>
<span class="token function">Set-ItemProperty</span> <span class="token operator">-</span>Path <span class="token string">&#39;HKCU:\\Environment&#39;</span> <span class="token operator">-</span>Name <span class="token string">&#39;PUB_CACHE&#39;</span> <span class="token operator">-</span>Value <span class="token string">&#39;%USERPROFILE%\\.pub-cache&#39;</span>
<span class="token comment"># 在脚本块内创建变量</span>
<span class="token function">New-Variable</span> <span class="token operator">-</span>Name <span class="token string">&quot;MyVariable&quot;</span> <span class="token operator">-</span>Value <span class="token string">&quot;MyValue&quot;</span> <span class="token operator">-</span>Scope Script
<span class="token comment"># 在脚本块内使用变量值</span>
<span class="token function">Write-Host</span> <span class="token string">&quot;Inside script block: <span class="token variable">$MyVariable</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cmd" tabindex="-1"><a class="header-anchor" href="#cmd" aria-hidden="true">#</a> CMD</h3><p>批处理脚本中（而不是直接在 CMD 中运行），需要将 <code>%i</code> 改为 <code>%%i</code></p><div class="language-bat line-numbers-mode" data-ext="bat"><pre class="language-bat"><code>@echo off
RME 读取所在行
(reg query &quot;HKCU\\Environment&quot; /v Path) ^| findstr /r /c:&quot;^[ ]*Path&quot;
REM 读取具体值
for /f &quot;tokens=3,*&quot; %i in (&#39;reg query &quot;HKCU\\Environment&quot; /v Path ^| findstr /r /c:&quot;^[ ]*Path&quot;&#39;) do echo %i
for /f &quot;tokens=3,*&quot; %i in (&#39;reg query &quot;HKCU\\Environment&quot; /v Path ^| findstr /r /c:&quot;^[ ]*Path&quot;&#39;) do set &quot;PathValue=%i&quot;
REM 修改
reg add HKCU\\Environment /v PUB_CACHE /t REG_EXPAND_SZ /d &quot;%USERPROFILE%\\.pub-cache&quot; /f
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="默认环境变量" tabindex="-1"><a class="header-anchor" href="#默认环境变量" aria-hidden="true">#</a> 默认环境变量</h2><h3 id="windows-11" tabindex="-1"><a class="header-anchor" href="#windows-11" aria-hidden="true">#</a> Windows 11</h3><div class="language-bat line-numbers-mode" data-ext="bat"><pre class="language-bat"><code>REM 默认Path
setx Path &quot;%SystemRoot%\\System32;%SystemRoot%;%SystemRoot%\\System32\\wbem;%SystemRoot%\\System32\\WindowsPowerShell\\v1.0;%SystemRoot%\\System32\\OpenSSH;&quot; /M
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function v(m,k){const a=t("ExternalLinkIcon");return o(),p("div",null,[r,n("p",null,[n("a",u,[i("Windows 10 环境变量：通过CMD 和PowerShell 写入环境变量"),c(a)])]),d])}const q=e(l,[["render",v],["__file","reg-config.html.vue"]]);export{q as default};
