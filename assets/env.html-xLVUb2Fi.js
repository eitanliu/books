import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as t,c as i,b as e,d as a,a as s,e as o}from"./app-nxhhSa7a.js";const c={},d=o(`<h1 id="环境安装" tabindex="-1"><a class="header-anchor" href="#环境安装" aria-hidden="true">#</a> 环境安装</h1><h3 id="m1-mac-anaconda" tabindex="-1"><a class="header-anchor" href="#m1-mac-anaconda" aria-hidden="true">#</a> M1 Mac Anaconda</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-O</span> https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh
<span class="token function">sh</span> Miniconda3-latest-MacOSX-arm64.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>不自动激活</strong> <code>conda config --set auto*activate*base false</code></p><p><strong>撤销设置</strong> <code>conda init --reverse $SHELL</code></p><h3 id="创建激活conda环境" tabindex="-1"><a class="header-anchor" href="#创建激活conda环境" aria-hidden="true">#</a> 创建激活Conda环境</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda create <span class="token parameter variable">-n</span> llm <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.9</span>
conda activate llm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查看环境</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda info <span class="token parameter variable">--envs</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>删除环境</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda remove <span class="token parameter variable">--name</span> llm <span class="token parameter variable">--all</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装-modelscope" tabindex="-1"><a class="header-anchor" href="#安装-modelscope" aria-hidden="true">#</a> 安装 modelscope</h3><p><code>audio,cv</code> 版本不兼容需要单独环境安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># audio,cv == 1.25.0</span>
<span class="token comment"># nlp,multi-modal,science == 1.6.1</span>
<span class="token comment"># cv,audio,nlp,multi-modal,science</span>

pip <span class="token function">install</span> <span class="token string">&quot;modelscope[nlp,multi-modal,science]&quot;</span> <span class="token parameter variable">-f</span> https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html

pip <span class="token function">install</span> <span class="token string">&quot;modelscope[audio]&quot;</span> <span class="token parameter variable">-f</span> https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html

pip <span class="token function">install</span> <span class="token string">&quot;modelscope[cv]&quot;</span> <span class="token parameter variable">-f</span> https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装mac-pytorc" tabindex="-1"><a class="header-anchor" href="#安装mac-pytorc" aria-hidden="true">#</a> 安装Mac Pytorc</h3><p>PyTorch 从 <strong>1.12</strong> 起对 Apple 的 M 系列芯片供了支持Metal Performance Shaders（MPS）后端来达成 GPU 加速</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#pip install torch==2.6.0 torchaudio==2.6.0 torchvision==0.21.0</span>
pip <span class="token function">install</span> torch torchaudio torchvision
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>验证是否支持 GPU 加速</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-c</span> <span class="token string">&quot;import torch; print(torch.backends.mps.is_available())&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装-tensorflow" tabindex="-1"><a class="header-anchor" href="#安装-tensorflow" aria-hidden="true">#</a> 安装 tensorflow</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> tensorflow-macos tensorflow-metal
<span class="token comment">#python -m pip install tensorflow-macos==2.16.2</span>
<span class="token comment">#python -m pip install tensorflow-metal==1.2.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> <span class="token parameter variable">-c</span> apple tensorflow-deps
<span class="token assign-left variable">GRPC_PYTHON_BUILD_SYSTEM_OPENSSL</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">GRPC_PYTHON_BUILD_SYSTEM_ZLIB</span><span class="token operator">=</span><span class="token number">1</span>  python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> tensorflow-macos<span class="token operator">==</span><span class="token number">2.13</span>.0
python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> tensorflow-metal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TensorFlow 从<strong>2.4 版本</strong>开始支持 Mac M1 GPU 加速验证方法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-c</span> <span class="token string">&quot;import tensorflow as tf; print(len(tf.config.list_physical_devices(&#39;GPU&#39;)) &gt; 0)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="安装-jax" tabindex="-1"><a class="header-anchor" href="#安装-jax" aria-hidden="true">#</a> 安装 JAX</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># jax==0.4.30 flax==0.8.5</span>
pip <span class="token function">install</span> jax flax
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-c</span> <span class="token string">&quot;import jax; print(jax.devices())&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装编译环境" tabindex="-1"><a class="header-anchor" href="#安装编译环境" aria-hidden="true">#</a> 安装编译环境</h3><p>Rust 和 Cargo</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">--proto</span> <span class="token string">&#39;=https&#39;</span> <span class="token parameter variable">--tlsv1.2</span> <span class="token parameter variable">-sSf</span> https://sh.rustup.rs <span class="token operator">|</span> <span class="token function">sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>cv 需要安装 Cmake</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> cmake
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>audio 需要安装 llvm</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> llvm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="modelscope-2-6-1" tabindex="-1"><a class="header-anchor" href="#modelscope-2-6-1" aria-hidden="true">#</a> modelscope 2.6.1</h3><p>device should be either <code>cpu, cuda, gpu, gpu:X or cuda:X</code> where X is the ordinal for gpu device.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-c</span> <span class="token string">&quot;from modelscope.pipelines import pipeline;print(pipeline(&#39;word-segmentation&#39;, device=&#39;gpu&#39;)(&#39;今天天气不错，适合 出去游玩&#39;))&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="huggingface" tabindex="-1"><a class="header-anchor" href="#huggingface" aria-hidden="true">#</a> Huggingface</h3>`,38),p={href:"https://huggingface.co/docs/transformers/main/en/pipeline_tutorial?device=Apple+silicon#device",target:"_blank",rel:"noopener noreferrer"},h={href:"https://huggingface.co/docs/transformers/main/en/model_doc/qwen2",target:"_blank",rel:"noopener noreferrer"},m=e("br",null,null,-1),u={href:"https://huggingface.co/Qwen/Qwen2.5-7B-Instruct",target:"_blank",rel:"noopener noreferrer"},g=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># pip install -U flash-attn --no-build-isolation</span>
transformers-cli chat <span class="token parameter variable">--model_name_or_path</span> Qwen/Qwen2-7B-Instruct <span class="token parameter variable">--torch_dtype</span> auto <span class="token parameter variable">--attn_implementation</span> flash_attention_2 <span class="token parameter variable">--device</span> mps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>翻译模型</p>`,2),b={href:"https://huggingface.co/docs/transformers/model_doc/m2m_100",target:"_blank",rel:"noopener noreferrer"},v=e("br",null,null,-1),f={href:"https://huggingface.co/facebook/m2m100_418M",target:"_blank",rel:"noopener noreferrer"},_={href:"https://huggingface.co/docs/transformers/main/en/model_doc/nllb#generating-with-nllb",target:"_blank",rel:"noopener noreferrer"},k=e("br",null,null,-1),x={href:"https://huggingface.co/facebook/nllb-200-distilled-600M",target:"_blank",rel:"noopener noreferrer"},w={href:"https://huggingface.co/facebook/nllb-200-distilled-1.3B",target:"_blank",rel:"noopener noreferrer"},B={href:"https://huggingface.co/facebook/nllb-200-1.3B",target:"_blank",rel:"noopener noreferrer"},M={href:"https://huggingface.co/facebook/nllb-200-3.3B",target:"_blank",rel:"noopener noreferrer"},y={href:"https://huggingface.co/facebook/nllb-moe-54b",target:"_blank",rel:"noopener noreferrer"},q={href:"https://huggingface.co/transformers/master/model_doc/mbart.html",target:"_blank",rel:"noopener noreferrer"},S=e("br",null,null,-1),E={href:"https://huggingface.co/facebook/mbart-large-cc25",target:"_blank",rel:"noopener noreferrer"},A={href:"https://huggingface.co/facebook/mbart-large-50-many-to-many-mmt",target:"_blank",rel:"noopener noreferrer"},P={href:"https://huggingface.co/docs/transformers/model_doc/madlad-400",target:"_blank",rel:"noopener noreferrer"},G=e("br",null,null,-1),X={href:"https://huggingface.co/google/madlad400-3b-mt",target:"_blank",rel:"noopener noreferrer"},j={href:"https://huggingface.co/google/madlad400-7b-mt",target:"_blank",rel:"noopener noreferrer"},I={href:"https://huggingface.co/google/madlad400-7b-mt-bt",target:"_blank",rel:"noopener noreferrer"},L={href:"https://huggingface.co/google/madlad400-10b-mt",target:"_blank",rel:"noopener noreferrer"},T={href:"https://huggingface.co/ModelSpace/GemmaX2-28-2B-v0.1",target:"_blank",rel:"noopener noreferrer"},U={href:"https://huggingface.co/ModelSpace/GemmaX2-28-9B-v0.1",target:"_blank",rel:"noopener noreferrer"},N={href:"https://huggingface.co/alirezamsh/small100",target:"_blank",rel:"noopener noreferrer"},C={href:"https://huggingface.co/docs/transformers/v4.51.0/en/gguf",target:"_blank",rel:"noopener noreferrer"},O={href:"https://spaceack.github.io/20221213-macm1%E5%AE%89%E8%A3%85modelscope%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/",target:"_blank",rel:"noopener noreferrer"},Q=e("br",null,null,-1),H={href:"https://stackoverflow.com/questions/69151553/grpcio-fails-installation-for-tensorflow-2-5-on-arm64-apple-silicon",target:"_blank",rel:"noopener noreferrer"};function V(Y,D){const n=l("ExternalLinkIcon");return t(),i("div",null,[d,e("p",null,[e("a",p,[a("Pipeline Apple silicon device"),s(n)])]),e("p",null,[e("a",h,[a("qwen2 doc"),s(n)]),m,e("a",u,[a("Qwen/Qwen2.5-7B-Instruct"),s(n)])]),g,e("p",null,[e("a",b,[a("m2m doc"),s(n)]),v,e("a",f,[a("facebook/m2m100_418M"),s(n)])]),e("p",null,[e("a",_,[a("nllb doc"),s(n)]),k,e("a",x,[a("facebook/nllb-200-distilled-600M"),s(n)]),a(", "),e("a",w,[a("facebook/nllb-200-distilled-1.3B"),s(n)]),a(", "),e("a",B,[a("acebook/nllb-200-1.3B"),s(n)]),a(", "),e("a",M,[a("facebook/nllb-200-3.3B"),s(n)]),a(", "),e("a",y,[a("facebook/nllb-moe-54b"),s(n)])]),e("p",null,[e("a",q,[a("mbart doc"),s(n)]),S,e("a",E,[a("facebook/mbart-large-cc25"),s(n)]),a(", "),e("a",A,[a("facebook/mbart-large-50-many-to-many-mmt"),s(n)])]),e("p",null,[e("a",P,[a("madlad doc"),s(n)]),G,e("a",X,[a("google/madlad400-3b-mt"),s(n)]),a(", "),e("a",j,[a("google/madlad400-7b-mt"),s(n)]),a(", "),e("a",I,[a("google/madlad400-7b-mt-bt"),s(n)]),a(", "),e("a",L,[a("google/madlad400-10b-mt"),s(n)])]),e("p",null,[e("a",T,[a("ModelSpace/GemmaX2-28-2B-v0.1"),s(n)]),a(", "),e("a",U,[a("ModelSpace/GemmaX2-28-9B-v0.1"),s(n)])]),e("p",null,[e("a",N,[a("alirezamsh/small100"),s(n)])]),e("p",null,[e("a",C,[a("GGUF"),s(n)])]),e("p",null,[e("a",O,[a("Mac M1 安装 modelscope 深度学习库"),s(n)]),Q,e("a",H,[a("Grpcio fails installation for Tensorflow 2.5 on arm64 Apple Silicon"),s(n)])])])}const F=r(c,[["render",V],["__file","env.html.vue"]]);export{F as default};
